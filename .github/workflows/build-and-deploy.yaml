name: Test, Build, and Deploy to EKS

on:
  push:
    branches:
      - main
      - dev

jobs:
  test:
    name: Run PHPUnit Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.3'
        tools: composer

    - name: Install dependencies
      run: composer install

    - name: Run PHPUnit
      run: vendor/bin/phpunit tests
  
  build-and-push:
    name: Build and Push
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set image tag based on branch
      run: echo "IMAGE_TAG=$(echo ${GITHUB_REF#refs/heads/} | sed 's/main/prod/;s/dev/dev/')" >> $GITHUB_ENV

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ env.IMAGE_TAG }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Deploy to EKS
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    # This will set up Kubeconfig depending on the branch/environment
    # This will either setup the prod cluster or the dev cluster
    - name: Set up Kubeconfig
      run: |
        if [ "${{ github.ref }}" == "refs/heads/main" ]; then
          echo "Setting up kubeconfig for Prod Cluster"
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME_PROD }} --region ${{ secrets.AWS_REGION }}
        elif [ "${{ github.ref }}" == "refs/heads/dev" ]; then
          echo "Setting up kubeconfig for Dev Cluster"
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME_DEV }} --region ${{ secrets.AWS_REGION }}
        fi

    # This will deploy either the prod image or the dev image to the appropriate cluster
    - name: Update Kubernetes deployment
      run: |
        kubectl set image deployment/my-deployment my-container=${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}